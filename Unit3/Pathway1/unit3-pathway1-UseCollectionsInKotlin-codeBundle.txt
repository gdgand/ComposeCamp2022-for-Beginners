// ======================================================
// Use collections in Kotlin

fun main() {
   	val rockPlants = arrayOf<String>("Mercury", "Venus", "Earth", "Mars")
   	val gasPlants = arrayOf("Jupiter", "Saturn", "Uranus", "Neptune")
   
	val solarSystem = rockPlants + gasPlants
    println(solarSystem[0])
    println(solarSystem[1])
    println(solarSystem[2])
    println(solarSystem[3])
    println(solarSystem[4])
    println(solarSystem[5])
    println(solarSystem[6])
    println(solarSystem[7])
    
    solarSystem[3] = "Little Earth"
    println(solarSystem[3])
    
    // can not add new elements, but make another new Array
    // solarSystem[8] = "Pluto"
    
    val newSolarSystem = arrayOf("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune", "Pluto")
    println(newSolarSystem[8])
}




// ======================================================
// Lists

fun main() {
	// val solarSystem = listOf("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
	val solarSystem = mutableListOf("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
    
    println(solarSystem.size)
    println(solarSystem[2])
    println(solarSystem.get(3))
    println(solarSystem.indexOf("Earth"))
    println(solarSystem.indexOf("Pluto"))
    
    solarSystem.add("Pluto")
    solarSystem.add(3, "Theia")
    
    for (planet in solarSystem) {
        println(planet)
    }
    
    solarSystem[3] = "Future Moon"
    
	println(solarSystem[3])
	println(solarSystem[9])
    
    solarSystem.removeAt(9)
    solarSystem.remove("Future Moon")
    println(solarSystem.contains("Pluto"))
    println("Future Moon" in solarSystem)
}




// ======================================================
// Sets

fun main() {
   val solarSystem = mutableSetOf("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
   println(solarSystem.size)
   solarSystem.add("Pluto")
   println(solarSystem.size)
   println(solarSystem.contains("Pluto"))
   solarSystem.add("Pluto")
   println(solarSystem.size)
   solarSystem.remove("Pluto")
   println(solarSystem.size)
   println(solarSystem.contains("Pluto"))
}




// ======================================================
// Map collection

fun main() {
    val solarSystem = mutableMapOf(
        "Mercury" to 0,
        "Venus" to 0,
        "Earth" to 1,
        "Mars" to 2,
        "Jupiter" to 79,
        "Saturn" to 82,
        "Uranus" to 27,
        "Neptune" to 14
    )
    
    println(solarSystem.size)
    solarSystem["Pluto"] = 5
    println(solarSystem.size)
    println(solarSystem["Pluto"])
    println(solarSystem.get("Pluto"))
    println(solarSystem.get("Theia"))
    solarSystem.remove("Pluto")
    println(solarSystem.size)
    solarSystem["Jupiter"] = 78
    println(solarSystem["Jupiter"])
}

// ======================================================























