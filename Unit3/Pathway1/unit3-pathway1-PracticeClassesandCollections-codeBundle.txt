data class Event(
	val title: String,
    val description: String? = null,
    val daypart: Daypart,
    val duration: Int,
)

val Event.durationOfEvent: String
	get() = if(this.duration < 60) {
        "short"
    } else {
        "long"
    }

enum class Daypart {
    MORNING,
    AFTERNOON,
    NIGHT
}

fun main() {
	val event1 = Event(title = "Wake up", description = "Time to get up", daypart = Daypart.MORNING, duration = 0)
	val event2 = Event(title = "Eat breakfast", daypart = Daypart.MORNING, duration = 15)
    val event3 = Event(title = "Learn about Kotlin", daypart = Daypart.AFTERNOON, duration = 30)
    val event4 = Event(title = "Practice Compose", daypart = Daypart.AFTERNOON, duration = 60)
    val event5 = Event(title = "Watch latest DevBytes video", daypart = Daypart.AFTERNOON, duration = 10)
    val event6 = Event(title = "Check out latest Android Jetpack library", daypart = Daypart.NIGHT, duration = 45)
   
	val events = mutableListOf<Event>(event1, event2, event3, event4, event5, event6)
   
    val shortEvents = events.filter {
       it.duration < 60
    }
    
    println("You have ${shortEvents.size} short events")
    
    val groupedEvents = events.groupBy { it.daypart }
    groupedEvents.forEach { (daypart, events) ->
    	println("$daypart: ${events.size} events")
    }
    
    println("Last event of the day: ${events[events.size - 1].title}")
    println("Last event of the day: ${events.last().title}")
    
    println("Duration of first event of the day: ${events[0].durationOfEvent}")
}